{"version":3,"sources":["../../../server/test/controllers/userController.spec.js"],"names":["expect","chai","admin","mocks","attendant","newAttendant","updateAttendant","invalidUsername","unknownUser","invalidNewUsername","invalidPasswordFormat","invalidNewEmail","invalidSignupRole","invalidNewPassword","use","chaiHttp","adminToken","attendantToken","describe","before","done","request","app","post","send","end","err","res","body","token","it","to","equal","status","have","property","that","is","a","error","be","username","role","set","an","get","put","updatedUser","newAdmin","delete","deletedUser"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\nimport mocks from './mocks/userData';\r\n\r\nconst { expect } = chai;\r\n\r\nconst {\r\n  admin, attendant, newAttendant, updateAttendant, invalidUsername, unknownUser,\r\n  invalidNewUsername, invalidPasswordFormat, invalidNewEmail, invalidSignupRole,\r\n  invalidNewPassword,\r\n} = mocks;\r\n\r\nchai.use(chaiHttp);\r\n\r\nlet adminToken;\r\nlet attendantToken;\r\n\r\ndescribe('Users', () => {\r\n  before((done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/login')\r\n      .send(admin)\r\n      .end((err, res) => {\r\n        adminToken = res.body.token;\r\n        done();\r\n      });\r\n  });\r\n  before((done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/login')\r\n      .send(attendant)\r\n      .end((err, res) => {\r\n        attendantToken = res.body.token;\r\n        done();\r\n      });\r\n  });\r\n\r\n  describe('Tests for Login route', () => {\r\n    it('should return a 422 for invalid username', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/login')\r\n        .send(invalidUsername)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return a 422 for invalid password', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/login')\r\n        .send(invalidPasswordFormat)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return a 401 for wrong username or password', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/login')\r\n        .send(unknownUser)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(401);\r\n          expect(res.body.error).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return username and token for attendant', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/login')\r\n        .send(attendant)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body.username).to.be.a('string');\r\n          expect(res.body.token).to.be.a('string');\r\n          expect(res.body.role).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return username and token for admin', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/login')\r\n        .send(admin)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body.username).to.be.a('string');\r\n          expect(res.body.token).to.be.a('string');\r\n          expect(res.body.role).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Add / signup a new store attendant', () => {\r\n    it('should return error message if non-admin tries to access admin route', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', attendantToken)\r\n        .send({})\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(403);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should add new attendant if data is correct', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send(newAttendant)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(201);\r\n          expect(res).to.be.an('object');\r\n          expect(res.body).to.have.property('newAttendant');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return error if username already exists', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send(newAttendant)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res).to.be.an('object');\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return error for empty object', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send({})\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return error for invalid username', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send(invalidNewUsername)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return a 422 for invalid password format', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send(invalidNewPassword)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return a 422 for invalid email', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send(invalidNewEmail)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return a 422 for invalid role', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .set('Authorization', adminToken)\r\n        .send(invalidSignupRole)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Get route for users', () => {\r\n    it('# should get all users', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/users')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(200);\r\n          expect(res).to.be.an('object');\r\n          expect(res.body).to.have.property('allUsers').that.is.an('array');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('# should get a single user', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/users/1')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body).to.have.property('user').that.is.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('# should return error for non-existent id', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/users/899j9')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(404);\r\n          expect(res.body).to.have.property('error').that.is.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Tests for update routes', () => {\r\n    it ('# should update user personal data', (done) => {\r\n      chai.request(app)\r\n        .put('/api/v1/users/4')\r\n        .set('Authorization', adminToken)\r\n        .send(updateAttendant)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body).to.have.property('updatedUser');\r\n          expect(res.body.updatedUser).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it ('# should give admin right to attendant', (done) => {\r\n      chai.request(app)\r\n        .put('/api/v1/users/authorization/4')\r\n        .set('Authorization', adminToken)\r\n        .send({ admin: true })\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body).to.have.property('newAdmin');\r\n          expect(res.body.newAdmin).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it ('# should return error for admin right of non-existent id', (done) => {\r\n      chai.request(app)\r\n        .put('/api/v1/users/authorization/300000000')\r\n        .set('Authorization', adminToken)\r\n        .send({ admin: true })\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.status).to.equal(404);\r\n          expect(res.body).to.have.property('error');\r\n          expect(res.body.error).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it ('# should return error if id does not exist', (done) => {\r\n      chai.request(app)\r\n        .put('/api/v1/users/123abc')\r\n        .set('Authorization', adminToken)\r\n        .send(updateAttendant)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error');\r\n          expect(res.body.error).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it ('# should return error for invalid user name', (done) => {\r\n      chai.request(app)\r\n        .put('/api/v1/users/2')\r\n        .set('Authorization', adminToken)\r\n        .send(invalidNewUsername)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(422);\r\n          expect(res.body).to.have.property('error');\r\n          expect(res.body.error).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('Tests for user delete route', () => {\r\n    it ('# should delete user', (done) => {\r\n      chai.request(app)\r\n        .delete('/api/v1/users/4')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(200);\r\n          expect(res.body).to.have.property('deletedUser');\r\n          expect(res.body.deletedUser).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it ('# should return error if record does not exist', (done) => {\r\n      chai.request(app)\r\n        .delete('/api/v1/users/123abc')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(res.status).to.equal(404);\r\n          expect(res.body).to.have.property('error');\r\n          expect(res.body.error).to.be.a('string');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"userController.spec.js"}