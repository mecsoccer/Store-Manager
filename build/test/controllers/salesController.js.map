{"version":3,"sources":["../../../server/test/controllers/salesController.js"],"names":["chai","use","chaiHttp","expect","admin","userData","attendant","exampleSale","salesData","wrongSellerName","wrongProductName","wrongQuantity","wrongPrice","wrongTotal","wrongToken","adminToken","attendantToken","describe","before","done","request","app","post","send","end","err","res","body","token","it","get","set","to","equal","have","status","message","be","an","property","that","equals","has"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\nimport userData from './mocks/userData';\r\nimport salesData from './mocks/salesData';\r\n\r\nchai.use(chaiHttp);\r\nconst { expect } = chai;\r\n\r\nconst { admin, attendant } = userData;\r\nconst {\r\n  exampleSale, wrongSellerName, wrongProductName, wrongQuantity, wrongPrice, wrongTotal,\r\n} = salesData;\r\n\r\nconst wrongToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImphYWNoaWRvIiwicGFzc3dvcmQiOiIwNjM4NDU3OWhmIiwiaWF0IjoxNTQ3MDY4NzY2LCJleHAiOjE1NDcwNzIzNjZ9._L0BF4aCsGWU9jRJF8lsuu9_WLKyvEGpMJbn1KgSmSM';\r\n\r\nlet adminToken;\r\nlet attendantToken;\r\n\r\ndescribe('Tests for sales', () => {\r\n  before((done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/login')\r\n      .send(admin)\r\n      .end((err, res) => {\r\n        adminToken = res.body.token;\r\n      });\r\n    chai.request(app)\r\n      .post('/api/v1/auth/login')\r\n      .send(attendant)\r\n      .end((err, res) => {\r\n        attendantToken = res.body.token;\r\n        done();\r\n      });\r\n  });\r\n\r\n  describe('get requests for sales', () => {\r\n    it('Should not return sales record if not admin', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(401);\r\n          expect(res.body.message).to.equal('Sorry, accessible to admin only');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return sales record if user is admin', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return a single sale if admin', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales/1')\r\n        .set('Authorization', adminToken)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return an existing sale if attendant', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales/1')\r\n        .set('Authorization', attendantToken)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should not return sale for non-existent id', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales/10000000')\r\n        .set('Authorization', attendantToken)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(404);\r\n          expect(res.body.message).to.equal('sorry, the sale record does not exist');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('post requests for sales', () => {\r\n    it('should return 401 and error message if request has bad token', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', wrongToken)\r\n        .send(exampleSale)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(401);\r\n          expect(res.body).to.have.property('message').that.equals('You must provide valid authorization');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return 401 and error message if user is admin', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', adminToken)\r\n        .send(exampleSale)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(401);\r\n          expect(res.body).to.have.property('message').that.equals('Sorry, accessible to store attendants only');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid seller name', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(wrongSellerName)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid product name', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(wrongProductName)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid quantity', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(wrongQuantity)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid product price', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(wrongPrice)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid product total', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(wrongTotal)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should create sale record for attendant if data is valid', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(exampleSale)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.have.property('newSale');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"salesController.js"}