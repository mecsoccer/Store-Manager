{"version":3,"sources":["../../../server/test/controllers/salesController.js"],"names":["chai","use","chaiHttp","expect","admin","userData","attendant","exampleSale","salesData","wrongSellerName","wrongProductName","wrongQuantity","wrongPrice","wrongTotal","wrongToken","adminToken","attendantToken","describe","before","done","request","app","post","send","end","err","res","body","token","context","it","get","to","equal","have","status","message","set","be","an","property","that","equals","has"],"mappings":"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","file":"salesController.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\nimport userData from './mocks/userData';\r\nimport salesData from './mocks/salesData';\r\n\r\nchai.use(chaiHttp);\r\nconst { expect } = chai;\r\n\r\nconst { admin, attendant } = userData;\r\nconst {\r\n  exampleSale, wrongSellerName, wrongProductName, wrongQuantity, wrongPrice, wrongTotal,\r\n} = salesData;\r\n\r\nconst wrongToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImphYWNoaWRvIiwicGFzc3dvcmQiOiIwNjM4NDU3OWhmIiwiaWF0IjoxNTQ3MDY4NzY2LCJleHAiOjE1NDcwNzIzNjZ9._L0BF4aCsGWU9jRJF8lsuu9_WLKyvEGpMJbn1KgSmSM';\r\n\r\nlet adminToken;\r\nlet attendantToken;\r\n\r\ndescribe('Tests for sales', () => {\r\n  before((done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/login')\r\n      .send(admin)\r\n      .end((err, res) => {\r\n        adminToken = res.body.token;\r\n        done();\r\n      });\r\n  });\r\n\r\n  before((done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/auth/login')\r\n      .send(attendant)\r\n      .end((err, res) => {\r\n        attendantToken = res.body.token;\r\n        done();\r\n      });\r\n  });\r\n\r\n  context('#get requests for sales', () => {\r\n    it('Should not return sales record if not admin', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales')\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(401);\r\n          expect(res.body.message).to.equal('Sorry, accessible to admin only');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return sales record if user is admin', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales')\r\n        .set('Authorization', 'Bearer admin')\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return an existing sale if admin', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales/1')\r\n        .set('Authorization', 'Bearer admin')\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('Should return an existing sale if attendant', (done) => {\r\n      chai.request(app)\r\n        .get('/api/v1/sales/1')\r\n        .set('Authorization', 'Bearer attendant')\r\n        .end((err, res) => {\r\n\t\t\t\t\texpect(err).to.equal(null);\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.an('object');\r\n          done();\r\n        });\r\n    });\r\n\r\n\t\tit('Should not return sale for non-existent id', (done) => {\r\n\t\t\tchai.request(app)\r\n\t\t\t\t.get('/api/v1/sales/20')\r\n\t\t\t\t.set('Authorization', 'Bearer admin')\r\n\t\t\t\t.end((err, res) => {\r\n\t\t\t\t\texpect(err).to.equal(null);\r\n\t\t\t\t\texpect(res).to.have.status(404);\r\n\t\t\t\t\texpect(res.body.message).to.equal('Sorry, the sale record does not exist');\r\n\t\t\t\t\tdone();\r\n\t\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n  context('#post requests for sales', () => {\r\n    it('should return 401 and error message if request has bad token', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', wrongToken)\r\n        .send(exampleSale)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(401);\r\n          expect(res.body).to.have.property('message').that.equals('You must provide valid authorization');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return 401 and error message if user is admin', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', adminToken)\r\n        .send(exampleSale)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(401);\r\n          expect(res.body).to.have.property('message').that.equals('Sorry, accessible to store attendants only');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid seller name', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send({ wrongSellerName })\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid product name', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send({ wrongProductName })\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid quantity', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send({ wrongQuantity })\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid product price', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send({ wrongPrice })\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('respond with a 422 for invalid product total', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send({ wrongTotal })\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res.body).to.be.an('object').that.has.property('error').that.equals(true);\r\n          expect(res.body).to.be.an('object').that.has.property('message');\r\n          expect(res).to.have.status(422);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should create sale record for attendant if data is valid', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/sales')\r\n        .set('Authorization', attendantToken)\r\n        .send(exampleSale)\r\n        .end((err, res) => {\r\n          expect(err).to.equal(null);\r\n          expect(res).to.have.status(201);\r\n          expect(res.body).to.have.property('newSale');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"]}