{"version":3,"sources":["../../../server/test/controllers/salesController.js"],"names":["chai","use","chaiHttp","expect","getAll","get","describe","context","it","done","request","app","end","err","res","to","have","status","body","message","equal","set","be","null","an","post","send","attendant","no_of_products","worth_of_sales","details","name","quantity","price","newRecord","property"],"mappings":"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","file":"salesController.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport get from '../../controllers/salesController';\r\nimport app from '../../../app';\r\n\r\nchai.use(chaiHttp);\r\n\r\nconst expect = chai.expect;\r\nconst getAll = get.getAll;\r\n\r\ndescribe('sales', () => {\r\n  context('#get requests for sales', () => {\r\n    it('Should not return sales record if not admin', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .get('/api/v1/sales')\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(res).to.have.status(401);\r\n\t\t\t\t  expect(res.body.message).to.equal('Sorry, accessible to admin only');\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n\r\n    it('Should return sales record if admin', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .get('/api/v1/sales')\r\n\t\t\t  .set('Authorization', 'Bearer admin')\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(err).to.be.null;\r\n\t\t\t\t  expect(res).to.have.status(200);\r\n\t\t\t\t  expect(res).to.be.an('object');\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n\r\n    it('Should return an existing sale if admin', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .get('/api/v1/sales/1')\r\n\t\t\t  .set('Authorization', 'Bearer admin')\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(err).to.be.null;\r\n\t\t\t\t  expect(res).to.have.status(200);\r\n\t\t\t\t  expect(res).to.be.an('object');\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n    it('Should return an existing sale if attendant', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .get('/api/v1/sales/1')\r\n\t\t\t  .set('Authorization', 'Bearer attendant')\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(err).to.be.null;\r\n\t\t\t\t  expect(res).to.have.status(200);\r\n\t\t\t\t  expect(res).to.be.an('object');\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n\r\n    it('Should not return sale for non-existent id', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .get('/api/v1/sales/20')\r\n\t\t\t  .set('Authorization', 'Bearer admin')\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(res).to.have.status(404);\r\n\t\t\t\t  expect(res.body.message).to.equal('Sorry, the sale record does not exist');\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n  });\r\n\r\n  context('#post requests for sales', () => {\r\n    it('Should not post sales if not attendant', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .post('/api/v1/sales')\r\n\t\t\t  .send({\r\n          attendant: 'Jaachimma',\r\n          no_of_products: 200,\r\n          worth_of_sales: 12000,\r\n          details: [\r\n\t\t\t\t\t\t\t\t\t { name: 'shoe', quantity: 2, price: 2000 },\r\n\t\t\t\t\t\t\t\t\t { name: 'shoe', quantity: 2, price: 2000 },\r\n\t\t\t\t\t\t\t\t\t { name: 'shoe', quantity: 2, price: 2000 },\r\n\t\t\t\t\t\t\t\t   ],\r\n\t\t\t  })\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(res.body.message).to.equal('Sorry, accessible to attendant only');\r\n\t\t\t\t  expect(res).to.have.status(401);\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n\r\n    it('Should post sales if attendant', (done) => {\r\n      chai.request(app)\r\n\t\t\t  .post('/api/v1/sales')\r\n\t\t\t  .set('Authorization', 'Bearer attendant')\r\n\t\t\t  .send({\r\n\t\t\t\t\t  attendant: 'Jaachimma',\r\n\t\t\t\t\t  no_of_products: 200,\r\n\t\t\t\t\t  worth_of_sales: 12000,\r\n\t\t\t\t\t  details: [\r\n\t\t\t\t\t\t\t\t { name: 'shoe', quantity: 2, price: 2000 },\r\n\t\t\t\t\t\t\t\t { name: 'shoe', quantity: 2, price: 2000 },\r\n\t\t\t\t\t\t\t\t { name: 'shoe', quantity: 2, price: 2000 },\r\n\t\t\t\t\t\t\t   ],\r\n\t\t\t  })\r\n\t\t\t  .end((err, res) => {\r\n\t\t\t\t  expect(res.body.newRecord).to.have.property('id');\r\n\t\t\t\t  expect(res).to.have.status(201);\r\n\t\t\t\t  expect(res.body.message).to.equal('New record created');\r\n\t\t\t\t  done();\r\n\t\t\t  });\r\n    });\r\n  });\r\n});\r\n"]}