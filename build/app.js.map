{"version":3,"sources":["../server/app.js"],"names":["app","set","path","join","__dirname","engine","ejs","renderFile","use","express","json","urlencoded","extended","static","req","res","next","header","frontendRouter","apiRouter","err","locals","message","error","get","status","render","port","process","env","PORT","server","http","createServer","listen","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAjB;AACAJ,IAAIK,MAAJ,CAAW,MAAX,EAAmBC,cAAIC,UAAvB;AACAP,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEAD,IAAIQ,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAR,IAAIQ,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAV,IAAIQ,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAZ,IAAIQ,GAAJ,CAAQ,6BAAR;AACAR,IAAIQ,GAAJ,CAAQC,kBAAQI,MAAR,CAAeX,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAf,CAAR;AACAJ,IAAIQ,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,6BAA1C;AACAF,MAAIE,MAAJ,CAAW,kCAAX,EAA+C,MAA/C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,+DAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAD;AACD,CAND;;AAQAhB,IAAIQ,GAAJ,CAAQ,GAAR,EAAaU,cAAb;AACAlB,IAAIQ,GAAJ,CAAQ,SAAR,EAAmBW,eAAnB;;AAEA;AACAnB,IAAIQ,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACAhB,IAAIQ,GAAJ,CAAQ,UAACY,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B;AACAD,MAAIM,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAP,MAAIM,MAAJ,CAAWE,KAAX,GAAmBT,IAAId,GAAJ,CAAQwB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAL,MAAIU,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAV,MAAIW,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAjC;AACA9B,IAAIC,GAAJ,CAAQ,MAAR,EAAgB0B,IAAhB;;AAEA,IAAMI,SAASC,eAAKC,YAAL,CAAkBjC,GAAlB,CAAf;AACA+B,OAAOG,MAAP,CAAcP,IAAd;;AAEAQ,OAAOC,OAAP,GAAiBpC,GAAjB","file":"app.js","sourcesContent":["import http from 'http';\r\nimport createError from 'http-errors';\r\nimport express from 'express';\r\nimport path from 'path';\r\nimport cookieParser from 'cookie-parser';\r\nimport logger from 'morgan';\r\nimport ejs from 'ejs';\r\n\r\nimport frontendRouter from './routes/home';\r\nimport apiRouter from './routes/index';\r\n\r\nconst app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'UI'));\r\napp.engine('html', ejs.renderFile);\r\napp.set('view engine', 'html');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'UI')));\r\napp.use((req, res, next) => {\r\n  res.header('Access-Control-Allow-Origin', 'https://mecsoccer.github.io');\r\n  res.header('Access-Control-Allow-Credentials', 'true');\r\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-type, Authorization, Accept');\r\n  res.header('Access-Control-Allow-Methods', 'POST, OPTIONS, GET, PUT, DELETE');\r\n  next();\r\n});\r\n\r\napp.use('/', frontendRouter);\r\napp.use('/api/v1', apiRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use((err, req, res, next) => {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nconst port = process.env.PORT || '3000';\r\napp.set('port', port);\r\n\r\nconst server = http.createServer(app);\r\nserver.listen(port);\r\n\r\nmodule.exports = app;\r\n"]}