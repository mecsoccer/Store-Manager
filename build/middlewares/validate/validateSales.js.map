{"version":3,"sources":["../../../server/middlewares/validate/validateSales.js"],"names":["validateSales","req","res","next","body","date","creator","productName","quantity","price","total","valid","errors","length","push","status","send","message"],"mappings":";;;;;AAAA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AAAA,kBAGjCF,IAAIG,IAH6B;AAAA,MAEnCC,IAFmC,aAEnCA,IAFmC;AAAA,MAE7BC,OAF6B,aAE7BA,OAF6B;AAAA,MAEpBC,WAFoB,aAEpBA,WAFoB;AAAA,MAEPC,QAFO,aAEPA,QAFO;AAAA,MAEGC,KAFH,aAEGA,KAFH;AAAA,MAEUC,KAFV,aAEUA,KAFV;;;AAKrC,MAAIC,QAAQ,CAAZ;;AAEA,MAAMC,SAAS,EAAf;;AAEA,MAAIP,KAAKQ,MAAL,KAAgB,EAApB,EAAwB;AACtBF,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,oCAAZ;AACD;;AAED,MAAIR,QAAQO,MAAR,GAAiB,CAArB,EAAwB;AACtBF,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,iDAAZ;AACD;;AAED,MAAIP,YAAYM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BF,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,qDAAZ;AACD;;AAED,MAAI,OAAON,QAAP,KAAoB,QAApB,IAAgCA,WAAW,CAA/C,EAAkD;AAChDG,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,+CAAZ;AACD;;AAED,MAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAC7BE,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,0BAAZ;AACD;;AAED,MAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BA,UAAUD,QAAQD,QAAnD,EAA6D;AAC3DG,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,wDAAZ;AACD;;AAED,MAAIH,QAAQ,CAAZ,EAAe;AACb,WAAOT,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAA6BL,cAA7B,EAArB,CAAP;AACD;;AAED,SAAOT,MAAP;AACD;;kBAEcH,a","file":"validateSales.js","sourcesContent":["function validateSales(req, res, next) {\n  const {\n    date, creator, productName, quantity, price, total,\n  } = req.body;\n\n  let valid = 0;\n\n  const errors = [];\n\n  if (date.length === 10) {\n    valid += 1;\n  } else {\n    errors.push('date should be 10 characters long.');\n  }\n\n  if (creator.length > 1) {\n    valid += 1;\n  } else {\n    errors.push('creator should be more than one character long.');\n  }\n\n  if (productName.length > 1) {\n    valid += 1;\n  } else {\n    errors.push('productName should be more than one character long.');\n  }\n\n  if (typeof quantity === 'number' && quantity > 0) {\n    valid += 1;\n  } else {\n    errors.push('quantity should be a number greater than zero');\n  }\n\n  if (typeof price === 'number') {\n    valid += 1;\n  } else {\n    errors.push('price should be a number');\n  }\n\n  if (typeof total === 'number' && total === price * quantity) {\n    valid += 1;\n  } else {\n    errors.push('total should be a number equal to price times quantity');\n  }\n\n  if (valid < 6) {\n    return res.status(422).send({ message: 'Invalid inputs', errors });\n  }\n\n  return next();\n}\n\nexport default validateSales;\n"]}