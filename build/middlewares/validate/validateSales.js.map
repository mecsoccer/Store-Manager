{"version":3,"sources":["../../../server/middlewares/validate/validateSales.js"],"names":["validateSales","req","res","next","body","seller","productName","quantity","price","total","sellerExp","productNameExp","monetaryExp","integerExp","test","status","json","error","message"],"mappings":";;;;;AAAA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AAAA,kBAGjCF,IAAIG,IAH6B;AAAA,MAEnCC,MAFmC,aAEnCA,MAFmC;AAAA,MAE3BC,WAF2B,aAE3BA,WAF2B;AAAA,MAEdC,QAFc,aAEdA,QAFc;AAAA,MAEJC,KAFI,aAEJA,KAFI;AAAA,MAEGC,KAFH,aAEGA,KAFH;;;AAKrC,MAAMC,YAAY,WAAlB;AACA,MAAMC,iBAAiB,QAAvB;AACA,MAAMC,cAAc,aAApB;AACA,MAAMC,aAAa,OAAnB;;AAEA,MAAIH,UAAUI,IAAV,CAAeT,MAAf,MAA2B,KAA/B,EAAsC;AACpC,WAAOH,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,aAAO,IADmB;AAE1BC,eAAS;AAFiB,KAArB,CAAP;AAID;;AAED,MAAIP,eAAeG,IAAf,CAAoBR,WAApB,MAAqC,KAAzC,EAAgD;AAC9C,WAAOJ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,aAAO,IADmB;AAE1BC,eAAS;AAFiB,KAArB,CAAP;AAID;;AAED,MAAIL,WAAWC,IAAX,CAAgBP,QAAhB,MAA8B,KAAlC,EAAyC;AACvC,WAAOL,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,aAAO,IADmB;AAE1BC,eAAS;AAFiB,KAArB,CAAP;AAID;;AAED,MAAIN,YAAYE,IAAZ,CAAiBN,KAAjB,MAA4B,KAAhC,EAAuC;AACrC,WAAON,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,aAAO,IADmB;AAE1BC,eAAS;AAFiB,KAArB,CAAP;AAID;;AAED,MAAIN,YAAYE,IAAZ,CAAiBL,KAAjB,MAA4B,KAAhC,EAAuC;AACrC,WAAOP,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,aAAO,IADmB;AAE1BC,eAAS;AAFiB,KAArB,CAAP;AAID;;AAED,SAAOf,MAAP;AACD;;kBAEcH,a","file":"validateSales.js","sourcesContent":["function validateSales(req, res, next) {\r\n  const {\r\n    seller, productName, quantity, price, total,\r\n  } = req.body;\r\n\r\n  const sellerExp = /^[a-z]+$/g;\r\n  const productNameExp = /^\\w+$/g;\r\n  const monetaryExp = /^\\d+\\.\\d\\d$/;\r\n  const integerExp = /^\\d+$/;\r\n\r\n  if (sellerExp.test(seller) === false) {\r\n    return res.status(422).json({\r\n      error: true,\r\n      message: 'seller should be a lowercase name without spaces eg. john',\r\n    });\r\n  }\r\n\r\n  if (productNameExp.test(productName) === false) {\r\n    return res.status(422).json({\r\n      error: true,\r\n      message: \"product name must be a string preceeded by alphabets and can contain spaces, underscores, alphabets, numbers eg. 'dangote cement_50kg'\",\r\n    });\r\n  }\r\n\r\n  if (integerExp.test(quantity) === false) {\r\n    return res.status(422).json({\r\n      error: true,\r\n      message: 'quantity must be an integer.',\r\n    });\r\n  }\r\n\r\n  if (monetaryExp.test(price) === false) {\r\n    return res.status(422).json({\r\n      error: true,\r\n      message: \"price must be a number having two decimal places enclosed in quotes eg. '20.00'\",\r\n    });\r\n  }\r\n\r\n  if (monetaryExp.test(total) === false) {\r\n    return res.status(422).json({\r\n      error: true,\r\n      message: \"total must be a number having two decimal places enclosed in quotes eg. '20.00'\",\r\n    });\r\n  }\r\n\r\n  return next();\r\n}\r\n\r\nexport default validateSales;\r\n"]}