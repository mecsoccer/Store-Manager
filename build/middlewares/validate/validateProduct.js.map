{"version":3,"sources":["../../../server/middlewares/validate/validateProduct.js"],"names":["validateProduct","req","res","next","body","name","category","quantityLeft","quantitySold","price","minQuantity","valid","errors","length","push","status","send","message"],"mappings":";;;;;AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAAA,kBAGnCF,IAAIG,IAH+B;AAAA,MAErCC,IAFqC,aAErCA,IAFqC;AAAA,MAE/BC,QAF+B,aAE/BA,QAF+B;AAAA,MAErBC,YAFqB,aAErBA,YAFqB;AAAA,MAEPC,YAFO,aAEPA,YAFO;AAAA,MAEOC,KAFP,aAEOA,KAFP;AAAA,MAEcC,WAFd,aAEcA,WAFd;;;AAKvC,MAAIC,QAAQ,CAAZ;;AAEA,MAAMC,SAAS,EAAf;;AAEA,MAAIP,KAAKQ,MAAL,GAAc,CAAlB,EAAqB;AACnBF,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,sDAAZ;AACD;;AAED,MAAIR,SAASO,MAAT,GAAkB,CAAtB,EAAyB;AACvBF,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,uDAAZ;AACD;;AAED,MAAI,OAAOP,YAAP,KAAwB,QAA5B,EAAsC;AACpCI,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,iCAAZ;AACD;;AAED,MAAI,OAAON,YAAP,KAAwB,QAA5B,EAAsC;AACpCG,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,iCAAZ;AACD;;AAED,MAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAC7BE,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,0BAAZ;AACD;;AAED,MAAI,OAAOJ,WAAP,KAAuB,QAA3B,EAAqC;AACnCC,aAAS,CAAT;AACD,GAFD,MAEO;AACLC,WAAOE,IAAP,CAAY,gCAAZ;AACD;;AAED,MAAIH,QAAQ,CAAZ,EAAe;AACb,WAAOT,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAA6BL,cAA7B,EAArB,CAAP;AACD;;AAED,SAAOT,MAAP;AACD;;kBAEcH,e","file":"validateProduct.js","sourcesContent":["function validateProduct(req, res, next) {\r\n  const {\r\n    name, category, quantityLeft, quantitySold, price, minQuantity,\r\n  } = req.body;\r\n\r\n  let valid = 0;\r\n\r\n  const errors = [];\r\n\r\n  if (name.length > 1) {\r\n    valid += 1;\r\n  } else {\r\n    errors.push('Product name should be more than one character long.');\r\n  }\r\n\r\n  if (category.length > 1) {\r\n    valid += 1;\r\n  } else {\r\n    errors.push('Category name should be more than one character long.');\r\n  }\r\n\r\n  if (typeof quantityLeft === 'number') {\r\n    valid += 1;\r\n  } else {\r\n    errors.push('quantityLeft should be a number');\r\n  }\r\n\r\n  if (typeof quantitySold === 'number') {\r\n    valid += 1;\r\n  } else {\r\n    errors.push('quantitySold should be a number');\r\n  }\r\n\r\n  if (typeof price === 'number') {\r\n    valid += 1;\r\n  } else {\r\n    errors.push('price should be a number');\r\n  }\r\n\r\n  if (typeof minQuantity === 'number') {\r\n    valid += 1;\r\n  } else {\r\n    errors.push('minQuantity should be a number');\r\n  }\r\n\r\n  if (valid < 6) {\r\n    return res.status(422).send({ message: 'Invalid inputs', errors });\r\n  }\r\n\r\n  return next();\r\n}\r\n\r\nexport default validateProduct;\r\n"]}