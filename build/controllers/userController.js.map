{"version":3,"sources":["../../server/controllers/userController.js"],"names":["dotenv","config","secret","process","env","SECRET_KEY","getAllUsers","req","res","query","text","values","pool","then","users","allUsers","rows","status","json","catch","err","getUser","userId","params","requestedUser","user","addUser","body","username","password","email","role","salt","bcrypt","genSaltSync","hash","hashSync","newAttendant","login","usernameInput","passwordInput","foundUser","compareSync","error","message","token","jwt","sign","expiresIn","updateUser","productSold","noOfSales","worthOfSales","updatedUser","deleteUser","deletedUser","giveAdminRight","adminUser"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport bcrypt from 'bcryptjs';\r\nimport dotenv from 'dotenv';\r\nimport pool from '../models/migration';\r\n\r\ndotenv.config();\r\n\r\nconst secret = process.env.SECRET_KEY;\r\n\r\nfunction getAllUsers(req, res) {\r\n  const query = {\r\n    text: 'SELECT * FROM users',\r\n    values: [],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((users) => {\r\n      const allUsers = users.rows;\r\n      res.status(200).json({ allUsers });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction getUser(req, res) {\r\n  const { userId } = req.params;\r\n\r\n  const query = {\r\n    text: 'SELECT * FROM users WHERE id = $1;',\r\n    values: [userId],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((requestedUser) => {\r\n      const user = requestedUser.rows[0];\r\n      return res.status(200).json({ user });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction addUser(req, res) {\r\n  const {\r\n    username, password, email, role,\r\n  } = req.body;\r\n\r\n  const salt = bcrypt.genSaltSync(10);\r\n  const hash = bcrypt.hashSync(password, salt);\r\n\r\n  const query = {\r\n    text: 'INSERT INTO users(username, password, email, productSold, noOfSales, worthOfSales, role) VALUES($1, $2, $3, $4, $5, $6, $7) RETURNING *',\r\n    values: [username, hash, email, 0, 0, 0, role],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((user) => {\r\n      const newAttendant = user.rows[0];\r\n      return res.status(201).json({ newAttendant });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction login(req, res) {\r\n  const { usernameInput, passwordInput } = req.body;\r\n\r\n  const query = {\r\n    text: 'SELECT * FROM users WHERE username = $1',\r\n    values: [usernameInput],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((user) => {\r\n      const foundUser = user.rows[0];\r\n      if (!bcrypt.compareSync(passwordInput, foundUser.password)) {\r\n        return res.status(401).json({ error: true, message: 'username or password incorrect' });\r\n      }\r\n      return foundUser;\r\n    })\r\n    .then((foundUser) => {\r\n      const { username, password, role } = foundUser;\r\n      const token = jwt.sign({ username, password, role }, secret, { expiresIn: '1hr' });\r\n      return res.status(200).json({ username, role, token });\r\n    })\r\n    .catch(() => {\r\n      const [error, message] = [true, 'user does not exist'];\r\n      return res.status(401).json({ error, message });\r\n    });\r\n}\r\n\r\nfunction updateUser(req, res) {\r\n  const {\r\n    username, productSold, noOfSales, worthOfSales,\r\n  } = req.body;\r\n  const { userId } = req.params;\r\n\r\n  const query = {\r\n    text: 'UPDATE users SET productSold = $1,noOfSales =$2,worthOfSales = $3 WHERE username = $4 AND id = $5;',\r\n    values: [productSold, noOfSales, worthOfSales, username, userId],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((user) => {\r\n      const updatedUser = user;\r\n      return res.status(200).json({ updatedUser });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction deleteUser(req, res) {\r\n  const { userId } = req.params;\r\n  const { username } = req.body;\r\n\r\n  const query = {\r\n    text: 'DELETE FROM users WHERE id = $1 AND username = $2;',\r\n    values: [userId, username],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((user) => {\r\n      const deletedUser = user;\r\n      return res.status(200).json({ deletedUser });\r\n    })\r\n    .catch((err) => {\r\n      res.status(200).json(err);\r\n    });\r\n}\r\n\r\nfunction giveAdminRight(req, res) {\r\n  const { userId } = req.params;\r\n  const { username, role } = req.body;\r\n\r\n  const query = {\r\n    text: 'UPDATE users SET role=$1 WHERE id=$2 and username=$3;',\r\n    values: [role, userId, username],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((user) => {\r\n      const adminUser = user;\r\n      return res.status(200).json({ adminUser });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nexport default {\r\n  addUser, login, getAllUsers, getUser, updateUser, deleteUser, giveAdminRight,\r\n};\r\n"],"file":"userController.js"}