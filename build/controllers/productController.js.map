{"version":3,"sources":["../../server/controllers/productController.js"],"names":["getAllProducts","req","res","query","text","values","pool","then","all","allProducts","rows","status","json","catch","err","getSpecificProduct","productId","params","requestedProduct","product","addProduct","body","name","category","quantityLeft","quantitySold","price","minQuantity","newProduct","updateProduct","updatedProduct","deleteProduct","deletedProduct"],"mappings":";;;;;;AAAA;;;;;;AAEA,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAChC,MAAMC,QAAQ;AACZC,UAAM,wBADM;AAEZC,YAAQ;AAFI,GAAd;;AAKAC,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,GAAD,EAAS;AACb,QAAMC,cAAcD,IAAIE,IAAxB;AACAR,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,wBAAF,EAArB;AACD,GAJH,EAKGI,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;AAED,SAASC,kBAAT,CAA4Bd,GAA5B,EAAiCC,GAAjC,EAAsC;AAAA,MAC5Bc,SAD4B,GACdf,IAAIgB,MADU,CAC5BD,SAD4B;;;AAGpC,MAAMb,QAAQ;AACZC,UAAM,uCADM;AAEZC,YAAQ,CAACW,SAAD;AAFI,GAAd;;AAKAV,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACW,gBAAD,EAAsB;AAC1B,QAAMC,UAAUD,iBAAiBR,IAAjB,CAAsB,CAAtB,CAAhB;AACA,WAAOR,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEO,gBAAF,EAArB,CAAP;AACD,GAJH,EAKGN,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;AAED,SAASM,UAAT,CAAoBnB,GAApB,EAAyBC,GAAzB,EAA8B;AAAA,kBAGxBD,IAAIoB,IAHoB;AAAA,MAE1BC,IAF0B,aAE1BA,IAF0B;AAAA,MAEpBC,QAFoB,aAEpBA,QAFoB;AAAA,MAEVC,YAFU,aAEVA,YAFU;AAAA,MAEIC,YAFJ,aAEIA,YAFJ;AAAA,MAEkBC,KAFlB,aAEkBA,KAFlB;AAAA,MAEyBC,WAFzB,aAEyBA,WAFzB;;;AAK5B,MAAMxB,QAAQ;AACZC,UAAM,iIADM;AAEZC,YAAQ,CAACiB,IAAD,EAAOC,QAAP,EAAiBC,YAAjB,EAA+BC,YAA/B,EAA6CC,KAA7C,EAAoDC,WAApD;AAFI,GAAd;;AAKArB,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACY,OAAD,EAAa;AACjB,QAAMS,aAAaT,QAAQT,IAAR,CAAa,CAAb,CAAnB;AACA,WAAOR,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEgB,sBAAF,EAArB,CAAP;AACD,GAJH,EAKGf,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;AAED,SAASe,aAAT,CAAuB5B,GAAvB,EAA4BC,GAA5B,EAAiC;AAAA,mBAG3BD,IAAIoB,IAHuB;AAAA,MAE7BC,IAF6B,cAE7BA,IAF6B;AAAA,MAEvBE,YAFuB,cAEvBA,YAFuB;AAAA,MAETC,YAFS,cAETA,YAFS;AAAA,MAIvBT,SAJuB,GAITf,IAAIgB,MAJK,CAIvBD,SAJuB;;;AAM/B,MAAMb,QAAQ;AACZC,UAAM,uFADM;AAEZC,YAAQ,CAACmB,YAAD,EAAeC,YAAf,EAA6BH,IAA7B,EAAmCN,SAAnC;AAFI,GAAd;;AAKAV,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACY,OAAD,EAAa;AACjB,QAAMW,iBAAiBX,OAAvB;AACA,WAAOjB,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEkB,8BAAF,EAArB,CAAP;AACD,GAJH,EAKGjB,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;AAED,SAASiB,aAAT,CAAuB9B,GAAvB,EAA4BC,GAA5B,EAAiC;AAAA,MACvBc,SADuB,GACTf,IAAIgB,MADK,CACvBD,SADuB;AAAA,MAEvBM,IAFuB,GAEdrB,IAAIoB,IAFU,CAEvBC,IAFuB;;;AAI/B,MAAMnB,QAAQ;AACZC,UAAM,mDADM;AAEZC,YAAQ,CAACW,SAAD,EAAYM,IAAZ;AAFI,GAAd;;AAKAhB,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACY,OAAD,EAAa;AACjB,QAAMa,iBAAiBb,OAAvB;AACA,WAAOjB,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEoB,8BAAF,EAArB,CAAP;AACD,GAJH,EAKGnB,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;kBAEc;AACbd,gCADa,EACGe,sCADH,EACuBK,sBADvB,EACmCS,4BADnC,EACkDE;AADlD,C","file":"productController.js","sourcesContent":["import pool from '../models/migration';\r\n\r\nfunction getAllProducts(req, res) {\r\n  const query = {\r\n    text: 'SELECT * FROM products',\r\n    values: [],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((all) => {\r\n      const allProducts = all.rows;\r\n      res.status(200).json({ allProducts });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction getSpecificProduct(req, res) {\r\n  const { productId } = req.params;\r\n\r\n  const query = {\r\n    text: 'SELECT * FROM products WHERE id = $1;',\r\n    values: [productId],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((requestedProduct) => {\r\n      const product = requestedProduct.rows[0];\r\n      return res.status(200).json({ product });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction addProduct(req, res) {\r\n  const {\r\n    name, category, quantityLeft, quantitySold, price, minQuantity,\r\n  } = req.body;\r\n\r\n  const query = {\r\n    text: 'INSERT INTO products(name, category, quantityLeft, quantitySold, price, minQuantity) VALUES($1, $2, $3, $4, $5, $6) RETURNING *',\r\n    values: [name, category, quantityLeft, quantitySold, price, minQuantity],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((product) => {\r\n      const newProduct = product.rows[0];\r\n      return res.status(201).json({ newProduct });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction updateProduct(req, res) {\r\n  const {\r\n    name, quantityLeft, quantitySold,\r\n  } = req.body;\r\n  const { productId } = req.params;\r\n\r\n  const query = {\r\n    text: 'UPDATE products SET quantityLeft = $1, quantitySold = $2 WHERE name = $3 AND id = $4;',\r\n    values: [quantityLeft, quantitySold, name, productId],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((product) => {\r\n      const updatedProduct = product;\r\n      return res.status(200).json({ updatedProduct });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction deleteProduct(req, res) {\r\n  const { productId } = req.params;\r\n  const { name } = req.body;\r\n\r\n  const query = {\r\n    text: 'DELETE FROM products WHERE id = $1 AND name = $2;',\r\n    values: [productId, name],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((product) => {\r\n      const deletedProduct = product;\r\n      return res.status(200).json({ deletedProduct });\r\n    })\r\n    .catch((err) => {\r\n      res.status(200).json(err);\r\n    });\r\n}\r\n\r\nexport default {\r\n  getAllProducts, getSpecificProduct, addProduct, updateProduct, deleteProduct,\r\n};\r\n"]}