{"version":3,"sources":["../../server/controllers/productController.js"],"names":["ProductController","req","res","query","text","values","pool","then","all","allProducts","rows","status","json","catch","err","available","availableProducts","finished","finishedProducts","productId","params","requestedProduct","product","id","message","body","name","category","quantityLeft","quantitySold","price","minQuantity","newProduct","updatedProduct","deletedProduct"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEMA,iB;;;;;;;;;mCACkBC,G,EAAKC,G,EAAK;AAC9B,UAAMC,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE,wBADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;;AAKAC,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,GAAD,EAAS;AACb,YAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;AACAR,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEH,UAAAA,WAAW,EAAXA;AAAF,SAArB;AACD,OAJH,EAKGI,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,OAPH;AAQD;;;yCAE2Bb,G,EAAKC,G,EAAK;AACpC,UAAMC,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;;AAIAE,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACQ,SAAD,EAAe;AACnB,YAAMC,iBAAiB,GAAGD,SAAS,CAACL,IAApC;AACAR,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,UAAAA,iBAAiB,EAAjBA;AAAF,SAArB;AACD,OAJH,EAKGH,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,OAPH;AAQD;;;wCAE0Bb,G,EAAKC,G,EAAK;AACnC,UAAMC,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;;AAIAE,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACU,QAAD,EAAc;AAClB,YAAMC,gBAAgB,GAAGD,QAAQ,CAACP,IAAlC;AACAR,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,UAAAA,gBAAgB,EAAhBA;AAAF,SAArB;AACD,OAJH,EAKGL,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,OAPH;AAQD;;;uCAEyBb,G,EAAKC,G,EAAK;AAAA,UAC1BiB,SAD0B,GACZlB,GAAG,CAACmB,MADQ,CAC1BD,SAD0B;AAGlC,UAAMhB,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE,uCADM;AAEZC,QAAAA,MAAM,EAAE,CAACc,SAAD;AAFI,OAAd;;AAKAb,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACc,gBAAD,EAAsB;AAC1B,YAAMC,OAAO,GAAGD,gBAAgB,CAACX,IAAjB,CAAsB,CAAtB,CAAhB;AACA,eAAOY,OAAP;AACD,OAJH,EAKGf,IALH,CAKQ,UAACe,OAAD,EAAa;AAAA,YACTC,EADS,GACFD,OADE,CACTC,EADS;;AAEjB,YAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,iBAAOrB,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEU,YAAAA,OAAO,EAAPA;AAAF,WAArB,CAAP;AACD;AACF,OAVH,EAWGT,KAXH,CAWS,YAAM;AACXX,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,UAAAA,OAAO,EAAE;AAAX,SAArB;AACD,OAbH;AAcD;;;+BAEiBvB,G,EAAKC,G,EAAK;AAAA,sBAGtBD,GAAG,CAACwB,IAHkB;AAAA,UAExBC,IAFwB,aAExBA,IAFwB;AAAA,UAElBC,QAFkB,aAElBA,QAFkB;AAAA,UAERC,YAFQ,aAERA,YAFQ;AAAA,UAEMC,YAFN,aAEMA,YAFN;AAAA,UAEoBC,KAFpB,aAEoBA,KAFpB;AAAA,UAE2BC,WAF3B,aAE2BA,WAF3B;AAK1B,UAAM5B,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE,iIADM;AAEZC,QAAAA,MAAM,EAAE,CAACqB,IAAD,EAAOC,QAAP,EAAiBC,YAAjB,EAA+BC,YAA/B,EAA6CC,KAA7C,EAAoDC,WAApD;AAFI,OAAd;;AAKAzB,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACe,OAAD,EAAa;AACjB,YAAMU,UAAU,GAAGV,OAAO,CAACZ,IAAR,CAAa,CAAb,CAAnB;AACA,eAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoB,UAAAA,UAAU,EAAVA;AAAF,SAArB,CAAP;AACD,OAJH,EAKGnB,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,OAPH;AAQD;;;kCAEoBb,G,EAAKC,G,EAAK;AAAA,uBAGzBD,GAAG,CAACwB,IAHqB;AAAA,UAE3BC,IAF2B,cAE3BA,IAF2B;AAAA,UAErBC,QAFqB,cAErBA,QAFqB;AAAA,UAEXC,YAFW,cAEXA,YAFW;AAAA,UAEGE,KAFH,cAEGA,KAFH;AAAA,UAEUC,WAFV,cAEUA,WAFV;AAAA,UAIrBZ,SAJqB,GAIPlB,GAAG,CAACmB,MAJG,CAIrBD,SAJqB;AAM7B,UAAMhB,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE,6GADM;AAEZC,QAAAA,MAAM,EAAE,CAACqB,IAAD,EAAOC,QAAP,EAAiBC,YAAjB,EAA+BE,KAA/B,EAAsCC,WAAtC,EAAmDZ,SAAnD;AAFI,OAAd;;AAKAb,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACe,OAAD,EAAa;AACjB,YAAMW,cAAc,GAAGX,OAAvB;AACA,eAAOpB,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEqB,UAAAA,cAAc,EAAdA;AAAF,SAArB,CAAP;AACD,OAJH,EAKGpB,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,OAPH;AAQD;;;kCAEoBb,G,EAAKC,G,EAAK;AAAA,UACrBiB,SADqB,GACPlB,GAAG,CAACmB,MADG,CACrBD,SADqB;AAAA,UAErBO,IAFqB,GAEZzB,GAAG,CAACwB,IAFQ,CAErBC,IAFqB;AAI7B,UAAMvB,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE,mDADM;AAEZC,QAAAA,MAAM,EAAE,CAACc,SAAD,EAAYO,IAAZ;AAFI,OAAd;;AAKApB,yBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACe,OAAD,EAAa;AACjB,YAAMY,cAAc,GAAGZ,OAAvB;AACA,eAAOpB,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEsB,UAAAA,cAAc,EAAdA;AAAF,SAArB,CAAP;AACD,OAJH,EAKGrB,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,OAPH;AAQD;;;;;;eAGYd,iB","sourcesContent":["import pool from '../models/migration';\r\n\r\nclass ProductController {\r\n  static getAllProducts(req, res) {\r\n    const query = {\r\n      text: 'SELECT * FROM products',\r\n      values: [],\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((all) => {\r\n        const allProducts = all.rows;\r\n        res.status(200).json({ allProducts });\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).json(err);\r\n      });\r\n  }\r\n\r\n  static getAvailableProducts(req, res) {\r\n    const query = {\r\n      text: 'SELECT * FROM products where quantityLeft > 0',\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((available) => {\r\n        const availableProducts = available.rows;\r\n        res.status(200).json({ availableProducts });\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).json(err);\r\n      });\r\n  }\r\n\r\n  static getFinishedProducts(req, res) {\r\n    const query = {\r\n      text: 'SELECT * FROM products where quantityLeft < 1',\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((finished) => {\r\n        const finishedProducts = finished.rows;\r\n        res.status(200).json({ finishedProducts });\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).json(err);\r\n      });\r\n  }\r\n\r\n  static getSpecificProduct(req, res) {\r\n    const { productId } = req.params;\r\n\r\n    const query = {\r\n      text: 'SELECT * FROM products WHERE id = $1;',\r\n      values: [productId],\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((requestedProduct) => {\r\n        const product = requestedProduct.rows[0];\r\n        return product;\r\n      })\r\n      .then((product) => {\r\n        const { id } = product;\r\n        if (typeof id === 'number') {\r\n          return res.status(200).json({ product });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        res.status(404).json({ message: 'sorry, product does not exist' });\r\n      });\r\n  }\r\n\r\n  static addProduct(req, res) {\r\n    const {\r\n      name, category, quantityLeft, quantitySold, price, minQuantity,\r\n    } = req.body;\r\n\r\n    const query = {\r\n      text: 'INSERT INTO products(name, category, quantityLeft, quantitySold, price, minQuantity) VALUES($1, $2, $3, $4, $5, $6) RETURNING *',\r\n      values: [name, category, quantityLeft, quantitySold, price, minQuantity],\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((product) => {\r\n        const newProduct = product.rows[0];\r\n        return res.status(201).json({ newProduct });\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).json(err);\r\n      });\r\n  }\r\n\r\n  static updateProduct(req, res) {\r\n    const {\r\n      name, category, quantityLeft, price, minQuantity,\r\n    } = req.body;\r\n    const { productId } = req.params;\r\n\r\n    const query = {\r\n      text: 'UPDATE products SET name = $1, category =$2, quantityLeft = $3, price = $4, minQuantity = $5 WHERE id = $6;',\r\n      values: [name, category, quantityLeft, price, minQuantity, productId],\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((product) => {\r\n        const updatedProduct = product;\r\n        return res.status(200).json({ updatedProduct });\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).json(err);\r\n      });\r\n  }\r\n\r\n  static deleteProduct(req, res) {\r\n    const { productId } = req.params;\r\n    const { name } = req.body;\r\n\r\n    const query = {\r\n      text: 'DELETE FROM products WHERE id = $1 AND name = $2;',\r\n      values: [productId, name],\r\n    };\r\n\r\n    pool.query(query)\r\n      .then((product) => {\r\n        const deletedProduct = product;\r\n        return res.status(200).json({ deletedProduct });\r\n      })\r\n      .catch((err) => {\r\n        res.status(200).json(err);\r\n      });\r\n  }\r\n}\r\n\r\nexport default ProductController;\r\n"],"file":"productController.js"}