{"version":3,"sources":["../../server/controllers/productController.js"],"names":["getAllProducts","req","res","status","json","products","getSpecificProduct","productId","params","requestedProduct","forEach","product","id","message","addProduct","body","name","category","quantityLeft","quantitySold","price","minQuantity","length","newProduct","push"],"mappings":";;;;;;AAAA;;;;;;AAEA,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAChC,SAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAArB,CAAP;AACD;;AAED,SAASC,kBAAT,CAA4BL,GAA5B,EAAiCC,GAAjC,EAAsC;AAAA,MAC5BK,SAD4B,GACdN,IAAIO,MADU,CAC5BD,SAD4B;;AAEpC,MAAIE,mBAAmB,IAAvB;;AAEAJ,qBAASK,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5B,QAAIA,QAAQC,EAAR,IAAcL,SAAlB,EAA6B;AAC3BE,yBAAmBE,OAAnB;AACD;AACF,GAJD;;AAMA,MAAIF,qBAAqB,IAAzB,EAA+B,OAAOP,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,SAAS,+BAAX,EAArB,CAAP;;AAE/B,SAAOX,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,gBAArB,CAAP;AACD;;AAED,SAASK,UAAT,CAAoBb,GAApB,EAAyBC,GAAzB,EAA8B;AAAA,kBAGxBD,IAAIc,IAHoB;AAAA,MAE1BC,IAF0B,aAE1BA,IAF0B;AAAA,MAEpBC,QAFoB,aAEpBA,QAFoB;AAAA,MAEVC,YAFU,aAEVA,YAFU;AAAA,MAEIC,YAFJ,aAEIA,YAFJ;AAAA,MAEkBC,KAFlB,aAEkBA,KAFlB;AAAA,MAEyBC,WAFzB,aAEyBA,WAFzB;;;AAK5B,MAAMT,KAAKP,mBAASiB,MAAT,GAAkB,CAA7B;;AAEA,MAAMC,aAAa;AACjBX,UADiB,EACbI,UADa,EACPC,kBADO,EACGC,0BADH,EACiBC,0BADjB,EAC+BC,YAD/B,EACsCC;AADtC,GAAnB;;AAIAhB,qBAASmB,IAAT,CAAcD,UAAd;AACA,SAAOrB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,SAAS,8BAAX,EAA2CU,sBAA3C,EAArB,CAAP;AACD;;kBAEc,EAAEvB,8BAAF,EAAkBM,sCAAlB,EAAsCQ,sBAAtC,E","file":"productController.js","sourcesContent":["import products from '../models/products';\n\nfunction getAllProducts(req, res) {\n  return res.status(200).json(products);\n}\n\nfunction getSpecificProduct(req, res) {\n  const { productId } = req.params;\n  let requestedProduct = null;\n\n  products.forEach((product) => {\n    if (product.id == productId) {\n      requestedProduct = product;\n    }\n  });\n\n  if (requestedProduct === null) return res.status(404).json({ message: 'Sorry, product does not exist' });\n\n  return res.status(200).json(requestedProduct);\n}\n\nfunction addProduct(req, res) {\n  const {\n    name, category, quantityLeft, quantitySold, price, minQuantity,\n  } = req.body;\n\n  const id = products.length + 1;\n\n  const newProduct = {\n    id, name, category, quantityLeft, quantitySold, price, minQuantity,\n  };\n\n  products.push(newProduct);\n  return res.status(201).json({ message: 'product successfully created', newProduct });\n}\n\nexport default { getAllProducts, getSpecificProduct, addProduct };\n"]}