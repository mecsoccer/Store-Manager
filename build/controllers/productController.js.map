{"version":3,"sources":["../../server/controllers/productController.js"],"names":["require","body","validationResult","exports","getAll","req","res","status","json","products","getProduct","productId","params","requiredProduct","forEach","product","id","message","addProduct","isLength","min","trim","isNumeric","errors","isEmpty","send","name","category","qty_left","qty_sold","price","min_qty","length","newProduct","push"],"mappings":";;AAAA;;;;;;eAEmCA,QAAQ,yBAAR,C;IAA3BC,I,YAAAA,I;IAAMC,gB,YAAAA,gB;;AAEdC,QAAQC,MAAR,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACnC,SAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAArB,CAAP;AACD,CAFD;;AAIAN,QAAQO,UAAR,GAAqB,UAAUL,GAAV,EAAeC,GAAf,EAAoB;AACvC,MAAMK,YAAYN,IAAIO,MAAJ,CAAWD,SAA7B;AACA,MAAIE,kBAAkB,IAAtB;;AAEAJ,qBAASK,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5B,QAAIA,QAAQC,EAAR,IAAcL,SAAlB,EAA6B;AAC3BE,wBAAkBE,OAAlB;AACD;AACF,GAJD;;AAMA,MAAIF,oBAAoB,IAAxB,EAA8B,OAAOP,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,SAAS,+BAAX,EAArB,CAAP;;AAE9B,SAAOX,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,eAArB,CAAP;AACD,CAbD;;AAeAV,QAAQe,UAAR,GAAqB,CAEnBjB,KAAK,MAAL,EAAa,0BAAb,EAAyCkB,QAAzC,CAAkD,EAAEC,KAAK,CAAP,EAAlD,EAA8DC,IAA9D,EAFmB,EAGnBpB,KAAK,UAAL,EAAiB,8BAAjB,EAAiDkB,QAAjD,CAA0D,EAAEC,KAAK,CAAP,EAA1D,CAHmB,EAInBnB,KAAK,UAAL,EAAiB,6BAAjB,EAAgDqB,SAAhD,EAJmB,EAKnBrB,KAAK,UAAL,EAAiB,6BAAjB,EAAgDqB,SAAhD,EALmB,EAMnBrB,KAAK,OAAL,EAAc,0BAAd,EAA0CqB,SAA1C,EANmB,EAOnBrB,KAAK,SAAL,EAAgB,4BAAhB,EAA8CqB,SAA9C,EAPmB,EASnB,UAAUjB,GAAV,EAAeC,GAAf,EAAoB;AAClB,MAAMiB,SAASrB,iBAAiBG,GAAjB,CAAf;;AAEA,MAAI,CAACkB,OAAOC,OAAZ,EAAqB;AACnBlB,QAAIC,MAAJ,CAAW,GAAX,EAAgBkB,IAAhB,CAAqB,uBAArB;AACD;;AALiB,kBASdpB,IAAIJ,IATU;AAAA,MAQhByB,IARgB,aAQhBA,IARgB;AAAA,MAQVC,QARU,aAQVA,QARU;AAAA,MAQAC,QARA,aAQAA,QARA;AAAA,MAQUC,QARV,aAQUA,QARV;AAAA,MAQoBC,KARpB,aAQoBA,KARpB;AAAA,MAQ2BC,OAR3B,aAQ2BA,OAR3B;;;AAWlB,MAAMf,KAAKP,mBAASuB,MAAT,GAAkB,CAA7B;;AAEA,MAAMC,aAAa;AACjBjB,UADiB,EACbU,UADa,EACPC,kBADO,EACGC,kBADH,EACaC,kBADb,EACuBC,YADvB,EAC8BC;AAD9B,GAAnB;;AAIAtB,qBAASyB,IAAT,CAAcD,UAAd;AACA,SAAO3B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEyB,sBAAF,EAAchB,SAAS,8BAAvB,EAArB,CAAP;AACD,CA5BkB,CAArB","file":"productController.js","sourcesContent":["import products from '../models/products';\n\nconst { body, validationResult } = require('express-validator/check');\n\nexports.getAll = function (req, res) {\n  return res.status(200).json(products);\n};\n\nexports.getProduct = function (req, res) {\n  const productId = req.params.productId;\n  let requiredProduct = null;\n\n  products.forEach((product) => {\n    if (product.id == productId) {\n      requiredProduct = product;\n    }\n  });\n\n  if (requiredProduct === null) return res.status(404).json({ message: 'Sorry, product does not exist' });\n\n  return res.status(200).json(requiredProduct);\n};\n\nexports.addProduct = [\n\n  body('name', 'product name is required').isLength({ min: 1 }).trim(),\n  body('category', 'product category is required').isLength({ min: 1 }),\n  body('qty_left', 'qty_left should be a number').isNumeric(),\n  body('qty_sold', 'qty_sold should be a number').isNumeric(),\n  body('price', 'price should be a number').isNumeric(),\n  body('min_qty', 'min_qty should be a number').isNumeric(),\n\n  function (req, res) {\n    const errors = validationResult(req);\n\n    if (!errors.isEmpty) {\n      res.status(422).send('Invalid data supplied');\n    }\n\n    const {\n      name, category, qty_left, qty_sold, price, min_qty,\n    } = req.body;\n\n    const id = products.length + 1;\n\n    const newProduct = {\n      id, name, category, qty_left, qty_sold, price, min_qty,\n    };\n\n    products.push(newProduct);\n    return res.status(201).json({ newProduct, message: 'product successfully created' });\n  },\n\n];\n"]}