{"version":3,"sources":["../../server/controllers/productController.js"],"names":["require","body","validationResult","exports","getAll","req","res","status","json","products","getProduct","productId","params","requiredProduct","forEach","product","id","addProduct","isLength","min","trim","isNumeric","errors","isEmpty","send","name","category","qty_left","qty_sold","price","min_qty","length","newProduct","push","created","success"],"mappings":";;AAAA;;;;;;eACmCA,QAAQ,yBAAR,C;IAA3BC,I,YAAAA,I;IAAMC,gB,YAAAA,gB;;AAEdC,QAAQC,MAAR,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACnC,QAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAArB,CAAP;AACA,CAFD;;AAIAN,QAAQO,UAAR,GAAqB,UAAUL,GAAV,EAAeC,GAAf,EAAoB;AACxC,KAAMK,YAAYN,IAAIO,MAAJ,CAAWD,SAA7B;AACA,KAAIE,kBAAkB,IAAtB;;AAEAJ,oBAASK,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC7B,MAAIA,QAAQC,EAAR,IAAcL,SAAlB,EAA6B;AAC5BE,qBAAkBE,OAAlB;AACA;AACD,EAJD;;AAMA,QAAOT,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,eAArB,CAAP;AACA,CAXD;;AAaAV,QAAQc,UAAR,GAAoB,CAEnBhB,KAAK,MAAL,EAAa,0BAAb,EAAyCiB,QAAzC,CAAkD,EAAEC,KAAK,CAAP,EAAlD,EAA8DC,IAA9D,EAFmB,EAGnBnB,KAAK,UAAL,EAAiB,8BAAjB,EAAiDiB,QAAjD,CAA0D,EAAEC,KAAK,CAAP,EAA1D,CAHmB,EAInBlB,KAAK,UAAL,EAAiB,6BAAjB,EAAgDoB,SAAhD,EAJmB,EAKnBpB,KAAK,UAAL,EAAiB,6BAAjB,EAAgDoB,SAAhD,EALmB,EAMnBpB,KAAK,OAAL,EAAc,0BAAd,EAA0CoB,SAA1C,EANmB,EAOnBpB,KAAK,SAAL,EAAgB,4BAAhB,EAA8CoB,SAA9C,EAPmB,EASnB,UAAUhB,GAAV,EAAeC,GAAf,EAAoB;AACnB,KAAMgB,SAASpB,iBAAiBG,GAAjB,CAAf;;AAEA,KAAI,CAACiB,OAAOC,OAAZ,EAAqB;AACpBjB,MAAIC,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB,4BAArB;AACA;;AALkB,iBAO4CnB,IAAIJ,IAPhD;AAAA,KAOXwB,IAPW,aAOXA,IAPW;AAAA,KAOLC,QAPK,aAOLA,QAPK;AAAA,KAOKC,QAPL,aAOKA,QAPL;AAAA,KAOeC,QAPf,aAOeA,QAPf;AAAA,KAOyBC,KAPzB,aAOyBA,KAPzB;AAAA,KAOgCC,OAPhC,aAOgCA,OAPhC;;AAQnB,KAAMd,KAAKP,mBAASsB,MAAT,GAAkB,CAA7B;;AAEA,KAAMC,aAAa,EAAEhB,MAAF,EAAMS,UAAN,EAAYC,kBAAZ,EAAsBC,kBAAtB,EAAgCC,kBAAhC,EAA0CC,YAA1C,EAAiDC,gBAAjD,EAAnB;;AAEArB,oBAASwB,IAAT,CAAcD,UAAd;AACA,QAAO1B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAE0B,SAASF,UAAX,EAAuBG,SAAS,IAAhC,EAArB,CAAP;AACA,CAvBkB,CAApB","file":"productController.js","sourcesContent":["import products from '../models/products';\r\nconst { body, validationResult } = require('express-validator/check');\r\n\t\r\nexports.getAll = function(req, res) {\r\n\treturn res.status(200).json(products);\r\n}\r\n\r\nexports.getProduct = function (req, res) {\r\n\tconst productId = req.params.productId;\r\n\tlet requiredProduct = null;\r\n\t\r\n\tproducts.forEach((product) => {\r\n\t\tif (product.id == productId) {\r\n\t\t\trequiredProduct = product;\r\n\t\t};\r\n\t})\r\n\t\r\n\treturn res.status(200).json(requiredProduct);\r\n}\r\n\r\nexports.addProduct =[\r\n\r\n\tbody('name', 'product name is required').isLength({ min: 1 }).trim(),\r\n\tbody('category', 'product category is required').isLength({ min: 1 }),\r\n\tbody('qty_left', 'qty_left should be a number').isNumeric(),\r\n\tbody('qty_sold', 'qty_sold should be a number').isNumeric(),\r\n\tbody('price', 'price should be a number').isNumeric(),\r\n\tbody('min_qty', 'min_qty should be a number').isNumeric(),\r\n\t\r\n\tfunction (req, res) {\r\n\t\tconst errors = validationResult(req);\r\n\t\t\r\n\t\tif (!errors.isEmpty) {\r\n\t\t\tres.status(422).send('problem with data supplied');\r\n\t\t};\r\n\t\t\r\n\t\tconst { name, category, qty_left, qty_sold, price, min_qty } = req.body;\r\n\t\tconst id = products.length + 1;\r\n\t\t\r\n\t\tconst newProduct = { id, name, category, qty_left, qty_sold, price, min_qty };\r\n\t\t\r\n\t\tproducts.push(newProduct);\r\n\t\treturn res.status(201).json({ created: newProduct, success: true });\r\n\t}\r\n\t\r\n]"]}