{"version":3,"sources":["../../server/controllers/saleController.js"],"names":["getAllSales","req","res","query","text","values","pool","then","sale","allSales","rows","status","json","catch","err","getSpecificSale","saleId","params","sales","addSale","body","seller","productName","quantity","price","total","newSale"],"mappings":";;;;;;;AAAA;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,qBADM;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAAd;;AAKAC,qBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,IAAD,EAAU;AACd,QAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAtB;AACAR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEH,MAAAA,QAAQ,EAARA;AAAF,KAArB;AACD,GAJH,EAKGI,KALH;AAKS;AAA0B,YAAAC,GAAG;AAAA,WAAIZ,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,GALtC;AAMD;;AAED,SAASC,eAAT,CAAyBd,GAAzB,EAA8BC,GAA9B,EAAmC;AAAA,MACzBc,MADyB,GACdf,GAAG,CAACgB,MADU,CACzBD,MADyB;AAGjC,MAAMb,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,oCADM;AAEZC,IAAAA,MAAM,EAAE,CAACW,MAAD;AAFI,GAAd;;AAKAV,qBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACW,KAAD,EAAW;AACf,QAAMV,IAAI,GAAGU,KAAK,CAACR,IAAN,CAAW,CAAX,CAAb;AACAR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,MAAAA,IAAI,EAAJA;AAAF,KAArB;AACD,GAJH,EAKGK,KALH;AAKS;AAA0B,YAAAC,GAAG;AAAA,WAAIZ,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,GALtC;AAMD;;AAED,SAASK,OAAT,CAAiBlB,GAAjB,EAAsBC,GAAtB,EAA2B;AAAA,kBAGrBD,GAAG,CAACmB,IAHiB;AAAA,MAEvBC,MAFuB,aAEvBA,MAFuB;AAAA,MAEfC,WAFe,aAEfA,WAFe;AAAA,MAEFC,QAFE,aAEFA,QAFE;AAAA,MAEQC,KAFR,aAEQA,KAFR;AAAA,MAEeC,KAFf,aAEeA,KAFf;AAKzB,MAAMtB,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,uGADM;AAEZC,IAAAA,MAAM,EAAE,CAACgB,MAAD,EAASC,WAAT,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,KAAvC;AAFI,GAAd;;AAKAnB,qBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,IAAD,EAAU;AACd,QAAMkB,OAAO,GAAGlB,IAAI,CAACE,IAAL,CAAU,CAAV,CAAhB;AACAR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEc,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACD,GAJH,EAKGb,KALH;AAKS;AAA0B,YAAAC,GAAG;AAAA,WAAIZ,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,GALtC;AAMD;;eAEc;AAAEd,EAAAA,WAAW,EAAXA,WAAF;AAAee,EAAAA,eAAe,EAAfA,eAAf;AAAgCI,EAAAA,OAAO,EAAPA;AAAhC,C","sourcesContent":["import pool from '../models/migration';\r\n\r\nfunction getAllSales(req, res) {\r\n  const query = {\r\n    text: 'SELECT * FROM sales',\r\n    values: [],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((sale) => {\r\n      const allSales = sale.rows;\r\n      res.status(200).json({ allSales });\r\n    })\r\n    .catch(/* istanbul ignore next */err => res.status(500).json(err));\r\n}\r\n\r\nfunction getSpecificSale(req, res) {\r\n  const { saleId } = req.params;\r\n\r\n  const query = {\r\n    text: 'SELECT * FROM sales WHERE id = $1;',\r\n    values: [saleId],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((sales) => {\r\n      const sale = sales.rows[0];\r\n      res.status(200).json({ sale });\r\n    })\r\n    .catch(/* istanbul ignore next */err => res.status(500).json(err));\r\n}\r\n\r\nfunction addSale(req, res) {\r\n  const {\r\n    seller, productName, quantity, price, total,\r\n  } = req.body;\r\n\r\n  const query = {\r\n    text: 'INSERT INTO sales(seller, productName, quantity, price, total) VALUES($1, $2, $3, $4, $5) RETURNING *',\r\n    values: [seller, productName, quantity, price, total],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((sale) => {\r\n      const newSale = sale.rows[0];\r\n      res.status(201).json({ newSale });\r\n    })\r\n    .catch(/* istanbul ignore next */err => res.status(500).json(err));\r\n}\r\n\r\nexport default { getAllSales, getSpecificSale, addSale };\r\n"],"file":"saleController.js"}