{"version":3,"sources":["../../server/controllers/salesController.js"],"names":["getAllSales","req","res","query","text","values","pool","then","sale","allSales","rows","status","json","catch","err","getSpecificSale","saleId","params","requestedSale","addSale","body","seller","productName","quantity","price","total","newSale"],"mappings":";;;;;;AAAA;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAMC,QAAQ;AACZC,UAAM,qBADM;AAEZC,YAAQ;AAFI,GAAd;;AAKAC,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,IAAD,EAAU;AACd,QAAMC,WAAWD,KAAKE,IAAtB;AACAR,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,kBAAF,EAArB;AACD,GAJH,EAKGI,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;AAED,SAASC,eAAT,CAAyBd,GAAzB,EAA8BC,GAA9B,EAAmC;AAAA,MACzBc,MADyB,GACdf,IAAIgB,MADU,CACzBD,MADyB;;;AAGjC,MAAMb,QAAQ;AACZC,UAAM,oCADM;AAEZC,YAAQ,CAACW,MAAD;AAFI,GAAd;;AAKAV,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,IAAD,EAAU;AACd,QAAMU,gBAAgBV,KAAKE,IAAL,CAAU,CAAV,CAAtB;AACA,WAAOR,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEM,4BAAF,EAArB,CAAP;AACD,GAJH,EAKGL,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;AAED,SAASK,OAAT,CAAiBlB,GAAjB,EAAsBC,GAAtB,EAA2B;AAAA,kBAGrBD,IAAImB,IAHiB;AAAA,MAEvBC,MAFuB,aAEvBA,MAFuB;AAAA,MAEfC,WAFe,aAEfA,WAFe;AAAA,MAEFC,QAFE,aAEFA,QAFE;AAAA,MAEQC,KAFR,aAEQA,KAFR;AAAA,MAEeC,KAFf,aAEeA,KAFf;;;AAKzB,MAAMtB,QAAQ;AACZC,UAAM,uGADM;AAEZC,YAAQ,CAACgB,MAAD,EAASC,WAAT,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,KAAvC;AAFI,GAAd;;AAKAnB,sBAAKH,KAAL,CAAWA,KAAX,EACGI,IADH,CACQ,UAACC,IAAD,EAAU;AACd,QAAMkB,UAAUlB,KAAKE,IAAL,CAAU,CAAV,CAAhB;AACA,WAAOR,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEc,gBAAF,EAArB,CAAP;AACD,GAJH,EAKGb,KALH,CAKS,UAACC,GAAD,EAAS;AACdZ,QAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB;AACD,GAPH;AAQD;;kBAEc,EAAEd,wBAAF,EAAee,gCAAf,EAAgCI,gBAAhC,E","file":"salesController.js","sourcesContent":["import pool from '../models/migration';\r\n\r\nfunction getAllSales(req, res) {\r\n  const query = {\r\n    text: 'SELECT * FROM sales',\r\n    values: [],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((sale) => {\r\n      const allSales = sale.rows;\r\n      res.status(200).json({ allSales });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction getSpecificSale(req, res) {\r\n  const { saleId } = req.params;\r\n\r\n  const query = {\r\n    text: 'SELECT * FROM sales WHERE id = $1;',\r\n    values: [saleId],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((sale) => {\r\n      const requestedSale = sale.rows[0];\r\n      return res.status(200).json({ requestedSale });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nfunction addSale(req, res) {\r\n  const {\r\n    seller, productName, quantity, price, total,\r\n  } = req.body;\r\n\r\n  const query = {\r\n    text: 'INSERT INTO sales(seller, productName, quantity, price, total) VALUES($1, $2, $3, $4, $5) RETURNING *',\r\n    values: [seller, productName, quantity, price, total],\r\n  };\r\n\r\n  pool.query(query)\r\n    .then((sale) => {\r\n      const newSale = sale.rows[0];\r\n      return res.status(201).json({ newSale });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json(err);\r\n    });\r\n}\r\n\r\nexport default { getAllSales, getSpecificSale, addSale };\r\n"]}